<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">
   <sql id="fromFrag">
      FROM PRODVIEW
   </sql>
   <sql id="searchFrag">
      <where>
            <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
               <choose>
                  <when test="simpleCondition.searchType eq 'lprodNm'">
                     INSTR(LPROD_NM, #{simpleCondition.searchWord}) > 0
                  </when>
                  <when test="simpleCondition.searchType eq 'buyerName'">
                     INSTR(BUYER_NAME, #{simpleCondition.searchWord}) > 0
                  </when>
                  <otherwise>
                     INSTR(LPROD_NM, #{simpleCondition.searchWord}) > 0
                     OR
                     INSTR(BUYER_NAME, #{simpleCondition.searchWord}) > 0
                  </otherwise>
               </choose>
            </if>
         </where>      
   </sql>   
   <select id="selectTotalRecord" resultType="int">
      	SELECT COUNT(*)
     	<include refid="fromFrag"></include>
		<where>
			<if test="detailCondition.prodLgu"></if>
		</where>
   </select>

   <select id="selectProdList" parameterType="PaginationInfo" resultType="ProdVO">
      SELECT  B.*
      FROM (
          SELECT ROWNUM RNUM, A.*
          FROM (
              SELECT
                  PROD_ID
                  , PROD_NAME
                  , LPROD_NM "lprod.lprodNm"
                  , BUYER_NAME "buyer.buyerName"
                  , PROD_PRICE
                  , PROD_SALE
                  , (
                      SELECT COUNT(DISTINCT CART_MEMBER)
                      FROM CART
                      WHERE CART_PROD = PROD_ID
                  ) MEM_COUNT
              <include refid="fromFrag"></include>
              <include refid="searchFrag"></include>                         
          )A
      )B
      WHERE RNUM BETWEEN #{startRow} AND #{endRow}
   </select>
   <resultMap type="ProdVO" id="prodMap" autoMapping="true">
      <id property="prodId" column="PROD_ID"/>
      <association property="lprod" autoMapping="true" />
      <association property="buyer" autoMapping="true" />
      <collection property="cartList" ofType="CartVO" autoMapping="true">
         <association property="member" autoMapping="true" />
      </collection>
   </resultMap>
   <select id="selectProd" parameterType="string" resultMap="prodMap">
      WITH MEMBERVIEW AS (
          SELECT MEMBER.*, CART.*
          FROM CART INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
      )
      SELECT
          PROD_ID,    PROD_NAME,    PROD_LGU,
          PROD_BUYER,    PROD_COST,    PROD_PRICE,
          PROD_SALE,    PROD_OUTLINE,    PROD_DETAIL,
          PROD_IMG,    PROD_TOTALSTOCK,    PROD_INSDATE,
          PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,
          PROD_DELIVERY,    PROD_UNIT,    PROD_QTYIN,
          PROD_QTYSALE,    PROD_MILEAGE
          , LPROD_NM
          , BUYER_ID, BUYER_NAME, BUYER_ADD1
          , BUYER_CHARGER, BUYER_BANK
          , CART_NO, CART_QTY
          , TO_DATE(SUBSTR(CART_NO, 1, 8), 'YYYYMMDD') CART_DATE
            , MEM_ID, MEM_NAME, MEM_HP
            , MEM_MAIL, MEM_ADD1, MEM_MILEAGE
      FROM    PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
                            INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
                            LEFT OUTER JOIN MEMBERVIEW ON (PROD_ID = CART_PROD)
      WHERE PROD_ID = #{prodId}         
   </select>
</mapper>









