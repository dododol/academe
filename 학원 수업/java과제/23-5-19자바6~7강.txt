6-5 클래스

정적(static)멤버

변수와 메소드에 사용. 

변수 앞에 static 붙으면 정적변수
초기화 앞에 static 초기화 블록 : 초기화
정적 메소드 - 안에서 변수를 생성해서 사용할때


일반 변수가 생성되어 참조하려면 각 타입으로 선언되어 만들어져야함. 그 기억잘소를 만드는 연산자가 new연산자임(heap메모리에 만듦)

멤버변수는 초기화시키지 않으면 자동으로 초기화 됨. 이걸 이니셜벨류라고 함

Product p1 = new Product()

getter to String 차이점
- getter 하나하나 내보냄
- toString 여러개를 묶어서 내보냄


public class Account {
	private static Account ac = null;		// static붙어서 정적
	private Account() {}
	
	public static Account getInstance() {		// getInstance 앞에 static 붙혀서 Account(반환타입)를 클래스타입으로 부름
		if (ac == null) ac = new Account();
		return ac;			// 여기까지 싱글턴 구성
	}
}

싱글톤 만드는 코드. 외워두면 좋다


7-1상속
객체지향언어에서 가장 중요한 것이 상속.
상속이 없으면 오버라이드, 다형성, 추상화 모두 없다.

쓰는 이유 : 상속(확장하다)라는 뜻으로 사용.
	자식이 부모보다 커지는게 상속. 부모가 갖고있는 변수나 메소드를
	자식이 다시 선언하지 않아도 사용할 수 있게 만들어주는 개념.

상속되어지지않는것들 : 1)부모클래스의 생성자메소드. 하지만 불러서 쓸수는 있음(super) .
		     2) private
역상속은 지원되지않는다. 부모는 자식클래스를 사용할 수 없음.

부모클래스가 스스로 생성되면 - 상성안됨, 상속과 관련없다.
자기 스스로 생성되지 않고 자식이 부모클래스의 생성자를 부를때(super) 부모클래스가 생성됨
			      생성될 때 묵시적으로 생성된 부모클래스 - 일 때만 상속되어짐
부모클래스의 생성자는 super라는 메소드에 의해 자식클래스의 생성자에서 호출됨(자식클래스 아니면 호출할 수 없음)
그렇게 생성된 부모클래스만 상속에 관여함

super();
자식생성자의 맨 첫줄은 super메소드 이어야한다.

Class Parent {}
Class child extends parent {		부모가 만들어지고 자식이 만들어짐. 그 후 상속
child() super()
}

기본생성자 = 매개변수가없어야한다. 